package utils

import (
	"bytes"
	"testing"
)

var test16Bytes = [16]byte{0x03, 0x01, 0x04, 0x01, 0x05, 0x09, 0x02, 0x06, 0x05, 0x03, 0x05, 0x08, 0x09, 0x07, 0x09, 0x03}

func TestBigEndian_String(t *testing.T) {
	if Binary.BigEndian.String() != "BigEndian" {
		t.Errorf("BigEndian.String() failed.\n")
	}
}

func TestBigEndian_Get16Bytes(t *testing.T) {
	var testSliceGet = []byte{0x0f, 0x03, 0x01, 0x04, 0x01, 0x05, 0x09, 0x02, 0x06, 0x05, 0x03, 0x05, 0x08, 0x09, 0x07, 0x09, 0x03, 0x0f}
	if test16Bytes != Binary.BigEndian.Get16Bytes(testSliceGet[1:17]) {
		t.Errorf("BigEndian.Get16Bytes() failed.\n")
	}
}

func TestBigEndian_Put16Bytes(t *testing.T) {
	var testSlicePut = []byte{0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f}
	var testSlicePutResult = []byte{0x0f, 0x03, 0x01, 0x04, 0x01, 0x05, 0x09, 0x02, 0x06, 0x05, 0x03, 0x05, 0x08, 0x09, 0x07, 0x09, 0x03, 0x0f}

	Binary.BigEndian.Put16Bytes(testSlicePut[0:16], test16Bytes)
	if bytes.Equal(testSlicePut, testSlicePutResult) {
		t.Errorf("BigEndian.Put16Bytes() failed.\n")
	}
}
